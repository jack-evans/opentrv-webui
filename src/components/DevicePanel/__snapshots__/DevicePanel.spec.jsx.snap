// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AnotherDisplay.jsx renders wthout crashing 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <DevicePanel
    match={
      Object {
        "params": Object {
          "id": "1234",
        },
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div
        className="DevicePanel__header-container"
      >
        <a
          className="DevicePanel__header-back-button"
          href="/"
        >
          <Icon
            description="Provide a description that will be used as the title"
            fillRule="evenodd"
            name="arrow--left"
            role="img"
          />
          <h3>
            Device Overview
          </h3>
        </a>
      </div>,
      "className": "DevicePanel",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <a
          className="DevicePanel__header-back-button"
          href="/"
        >
          <Icon
            description="Provide a description that will be used as the title"
            fillRule="evenodd"
            name="arrow--left"
            role="img"
          />
          <h3>
            Device Overview
          </h3>
        </a>,
        "className": "DevicePanel__header-container",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <Icon
              description="Provide a description that will be used as the title"
              fillRule="evenodd"
              name="arrow--left"
              role="img"
            />,
            <h3>
              Device Overview
            </h3>,
          ],
          "className": "DevicePanel__header-back-button",
          "href": "/",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "description": "Provide a description that will be used as the title",
              "fillRule": "evenodd",
              "name": "arrow--left",
              "role": "img",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Device Overview",
            },
            "ref": null,
            "rendered": "Device Overview",
            "type": "h3",
          },
        ],
        "type": "a",
      },
      "type": "div",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="DevicePanel__header-container"
        >
          <a
            className="DevicePanel__header-back-button"
            href="/"
          >
            <Icon
              description="Provide a description that will be used as the title"
              fillRule="evenodd"
              name="arrow--left"
              role="img"
            />
            <h3>
              Device Overview
            </h3>
          </a>
        </div>,
        "className": "DevicePanel",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <a
            className="DevicePanel__header-back-button"
            href="/"
          >
            <Icon
              description="Provide a description that will be used as the title"
              fillRule="evenodd"
              name="arrow--left"
              role="img"
            />
            <h3>
              Device Overview
            </h3>
          </a>,
          "className": "DevicePanel__header-container",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <Icon
                description="Provide a description that will be used as the title"
                fillRule="evenodd"
                name="arrow--left"
                role="img"
              />,
              <h3>
                Device Overview
              </h3>,
            ],
            "className": "DevicePanel__header-back-button",
            "href": "/",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "description": "Provide a description that will be used as the title",
                "fillRule": "evenodd",
                "name": "arrow--left",
                "role": "img",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Device Overview",
              },
              "ref": null,
              "rendered": "Device Overview",
              "type": "h3",
            },
          ],
          "type": "a",
        },
        "type": "div",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
