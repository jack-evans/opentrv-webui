// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Login.jsx renders without crashing 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Login />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="Login_title"
        >
          <h1>
            Login to OpenTRV
          </h1>
        </div>,
        <div
          className="Login__input"
        >
          <TextInput
            className="Login__email-input"
            disabled={false}
            id="login-email"
            invalid={false}
            invalidText=""
            labelText="Email"
            onChange={[Function]}
            onClick={[Function]}
            placeholder="Enter email address"
            type="text"
          />
          <TextInput
            className="Login__password-input"
            disabled={false}
            id="login-password"
            invalid={false}
            invalidText=""
            labelText="Password"
            onChange={[Function]}
            onClick={[Function]}
            placeholder="Enter password"
            type="password"
          />
        </div>,
        <div
          className="Login__buttons"
        >
          <Button
            className="Login__back-button"
            disabled={false}
            href="/"
            iconDescription="Provide icon description if icon is used"
            kind="secondary"
            small={false}
            tabIndex={0}
            type="button"
          >
            Back
          </Button>
          <Button
            className="Login__login-button"
            disabled={false}
            iconDescription="Provide icon description if icon is used"
            kind="primary"
            small={false}
            tabIndex={0}
            type="button"
          >
            Login
          </Button>
        </div>,
      ],
      "className": "Login",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <h1>
            Login to OpenTRV
          </h1>,
          "className": "Login_title",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Login to OpenTRV",
          },
          "ref": null,
          "rendered": "Login to OpenTRV",
          "type": "h1",
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <TextInput
              className="Login__email-input"
              disabled={false}
              id="login-email"
              invalid={false}
              invalidText=""
              labelText="Email"
              onChange={[Function]}
              onClick={[Function]}
              placeholder="Enter email address"
              type="text"
            />,
            <TextInput
              className="Login__password-input"
              disabled={false}
              id="login-password"
              invalid={false}
              invalidText=""
              labelText="Password"
              onChange={[Function]}
              onClick={[Function]}
              placeholder="Enter password"
              type="password"
            />,
          ],
          "className": "Login__input",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "className": "Login__email-input",
              "disabled": false,
              "id": "login-email",
              "invalid": false,
              "invalidText": "",
              "labelText": "Email",
              "onChange": [Function],
              "onClick": [Function],
              "placeholder": "Enter email address",
              "type": "text",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "className": "Login__password-input",
              "disabled": false,
              "id": "login-password",
              "invalid": false,
              "invalidText": "",
              "labelText": "Password",
              "onChange": [Function],
              "onClick": [Function],
              "placeholder": "Enter password",
              "type": "password",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <Button
              className="Login__back-button"
              disabled={false}
              href="/"
              iconDescription="Provide icon description if icon is used"
              kind="secondary"
              small={false}
              tabIndex={0}
              type="button"
            >
              Back
            </Button>,
            <Button
              className="Login__login-button"
              disabled={false}
              iconDescription="Provide icon description if icon is used"
              kind="primary"
              small={false}
              tabIndex={0}
              type="button"
            >
              Login
            </Button>,
          ],
          "className": "Login__buttons",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": "Back",
              "className": "Login__back-button",
              "disabled": false,
              "href": "/",
              "iconDescription": "Provide icon description if icon is used",
              "kind": "secondary",
              "small": false,
              "tabIndex": 0,
              "type": "button",
            },
            "ref": null,
            "rendered": "Back",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": "Login",
              "className": "Login__login-button",
              "disabled": false,
              "iconDescription": "Provide icon description if icon is used",
              "kind": "primary",
              "small": false,
              "tabIndex": 0,
              "type": "button",
            },
            "ref": null,
            "rendered": "Login",
            "type": [Function],
          },
        ],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="Login_title"
          >
            <h1>
              Login to OpenTRV
            </h1>
          </div>,
          <div
            className="Login__input"
          >
            <TextInput
              className="Login__email-input"
              disabled={false}
              id="login-email"
              invalid={false}
              invalidText=""
              labelText="Email"
              onChange={[Function]}
              onClick={[Function]}
              placeholder="Enter email address"
              type="text"
            />
            <TextInput
              className="Login__password-input"
              disabled={false}
              id="login-password"
              invalid={false}
              invalidText=""
              labelText="Password"
              onChange={[Function]}
              onClick={[Function]}
              placeholder="Enter password"
              type="password"
            />
          </div>,
          <div
            className="Login__buttons"
          >
            <Button
              className="Login__back-button"
              disabled={false}
              href="/"
              iconDescription="Provide icon description if icon is used"
              kind="secondary"
              small={false}
              tabIndex={0}
              type="button"
            >
              Back
            </Button>
            <Button
              className="Login__login-button"
              disabled={false}
              iconDescription="Provide icon description if icon is used"
              kind="primary"
              small={false}
              tabIndex={0}
              type="button"
            >
              Login
            </Button>
          </div>,
        ],
        "className": "Login",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <h1>
              Login to OpenTRV
            </h1>,
            "className": "Login_title",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Login to OpenTRV",
            },
            "ref": null,
            "rendered": "Login to OpenTRV",
            "type": "h1",
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <TextInput
                className="Login__email-input"
                disabled={false}
                id="login-email"
                invalid={false}
                invalidText=""
                labelText="Email"
                onChange={[Function]}
                onClick={[Function]}
                placeholder="Enter email address"
                type="text"
              />,
              <TextInput
                className="Login__password-input"
                disabled={false}
                id="login-password"
                invalid={false}
                invalidText=""
                labelText="Password"
                onChange={[Function]}
                onClick={[Function]}
                placeholder="Enter password"
                type="password"
              />,
            ],
            "className": "Login__input",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "className": "Login__email-input",
                "disabled": false,
                "id": "login-email",
                "invalid": false,
                "invalidText": "",
                "labelText": "Email",
                "onChange": [Function],
                "onClick": [Function],
                "placeholder": "Enter email address",
                "type": "text",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "className": "Login__password-input",
                "disabled": false,
                "id": "login-password",
                "invalid": false,
                "invalidText": "",
                "labelText": "Password",
                "onChange": [Function],
                "onClick": [Function],
                "placeholder": "Enter password",
                "type": "password",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <Button
                className="Login__back-button"
                disabled={false}
                href="/"
                iconDescription="Provide icon description if icon is used"
                kind="secondary"
                small={false}
                tabIndex={0}
                type="button"
              >
                Back
              </Button>,
              <Button
                className="Login__login-button"
                disabled={false}
                iconDescription="Provide icon description if icon is used"
                kind="primary"
                small={false}
                tabIndex={0}
                type="button"
              >
                Login
              </Button>,
            ],
            "className": "Login__buttons",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": "Back",
                "className": "Login__back-button",
                "disabled": false,
                "href": "/",
                "iconDescription": "Provide icon description if icon is used",
                "kind": "secondary",
                "small": false,
                "tabIndex": 0,
                "type": "button",
              },
              "ref": null,
              "rendered": "Back",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": "Login",
                "className": "Login__login-button",
                "disabled": false,
                "iconDescription": "Provide icon description if icon is used",
                "kind": "primary",
                "small": false,
                "tabIndex": 0,
                "type": "button",
              },
              "ref": null,
              "rendered": "Login",
              "type": [Function],
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
