// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Header..jsx renders without crashing 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Header
    onClick={[Function]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="Header__left-nav-toggle-container"
        >
          <button
            className="Header__left-nav-toggle"
            onClick={[Function]}
            type="button"
          >
            <span
              className="Header__left-nav-icon"
            />
          </button>
        </div>,
        <a
          className="Header__title"
          href="/overview"
        >
          <h3>
            OpenTRV
          </h3>
        </a>,
      ],
      "className": "Header",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <button
            className="Header__left-nav-toggle"
            onClick={[Function]}
            type="button"
          >
            <span
              className="Header__left-nav-icon"
            />
          </button>,
          "className": "Header__left-nav-toggle-container",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <span
              className="Header__left-nav-icon"
            />,
            "className": "Header__left-nav-toggle",
            "onClick": [Function],
            "type": "button",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "Header__left-nav-icon",
            },
            "ref": null,
            "rendered": null,
            "type": "span",
          },
          "type": "button",
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <h3>
            OpenTRV
          </h3>,
          "className": "Header__title",
          "href": "/overview",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "OpenTRV",
          },
          "ref": null,
          "rendered": "OpenTRV",
          "type": "h3",
        },
        "type": "a",
      },
    ],
    "type": "header",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="Header__left-nav-toggle-container"
          >
            <button
              className="Header__left-nav-toggle"
              onClick={[Function]}
              type="button"
            >
              <span
                className="Header__left-nav-icon"
              />
            </button>
          </div>,
          <a
            className="Header__title"
            href="/overview"
          >
            <h3>
              OpenTRV
            </h3>
          </a>,
        ],
        "className": "Header",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <button
              className="Header__left-nav-toggle"
              onClick={[Function]}
              type="button"
            >
              <span
                className="Header__left-nav-icon"
              />
            </button>,
            "className": "Header__left-nav-toggle-container",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <span
                className="Header__left-nav-icon"
              />,
              "className": "Header__left-nav-toggle",
              "onClick": [Function],
              "type": "button",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "Header__left-nav-icon",
              },
              "ref": null,
              "rendered": null,
              "type": "span",
            },
            "type": "button",
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <h3>
              OpenTRV
            </h3>,
            "className": "Header__title",
            "href": "/overview",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "OpenTRV",
            },
            "ref": null,
            "rendered": "OpenTRV",
            "type": "h3",
          },
          "type": "a",
        },
      ],
      "type": "header",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`Header..jsx when the isOpen property is true has applied the Header__left-nav-toggle--active class to the button 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Header
    isOpen={true}
    onClick={[Function]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="Header__left-nav-toggle-container"
        >
          <button
            className="Header__left-nav-toggle Header__left-nav-toggle--active"
            onClick={[Function]}
            type="button"
          >
            <span
              className="Header__left-nav-icon"
            />
          </button>
        </div>,
        <a
          className="Header__title"
          href="/overview"
        >
          <h3>
            OpenTRV
          </h3>
        </a>,
      ],
      "className": "Header",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <button
            className="Header__left-nav-toggle Header__left-nav-toggle--active"
            onClick={[Function]}
            type="button"
          >
            <span
              className="Header__left-nav-icon"
            />
          </button>,
          "className": "Header__left-nav-toggle-container",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <span
              className="Header__left-nav-icon"
            />,
            "className": "Header__left-nav-toggle Header__left-nav-toggle--active",
            "onClick": [Function],
            "type": "button",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "Header__left-nav-icon",
            },
            "ref": null,
            "rendered": null,
            "type": "span",
          },
          "type": "button",
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <h3>
            OpenTRV
          </h3>,
          "className": "Header__title",
          "href": "/overview",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "OpenTRV",
          },
          "ref": null,
          "rendered": "OpenTRV",
          "type": "h3",
        },
        "type": "a",
      },
    ],
    "type": "header",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="Header__left-nav-toggle-container"
          >
            <button
              className="Header__left-nav-toggle Header__left-nav-toggle--active"
              onClick={[Function]}
              type="button"
            >
              <span
                className="Header__left-nav-icon"
              />
            </button>
          </div>,
          <a
            className="Header__title"
            href="/overview"
          >
            <h3>
              OpenTRV
            </h3>
          </a>,
        ],
        "className": "Header",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <button
              className="Header__left-nav-toggle Header__left-nav-toggle--active"
              onClick={[Function]}
              type="button"
            >
              <span
                className="Header__left-nav-icon"
              />
            </button>,
            "className": "Header__left-nav-toggle-container",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <span
                className="Header__left-nav-icon"
              />,
              "className": "Header__left-nav-toggle Header__left-nav-toggle--active",
              "onClick": [Function],
              "type": "button",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "Header__left-nav-icon",
              },
              "ref": null,
              "rendered": null,
              "type": "span",
            },
            "type": "button",
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <h3>
              OpenTRV
            </h3>,
            "className": "Header__title",
            "href": "/overview",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "OpenTRV",
            },
            "ref": null,
            "rendered": "OpenTRV",
            "type": "h3",
          },
          "type": "a",
        },
      ],
      "type": "header",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
