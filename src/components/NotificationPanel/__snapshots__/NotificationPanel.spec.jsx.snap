// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`NotificationPanel.jsx when notifications is a populated array renders without crashing 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <NotificationPanel
    notifications={
      Array [
        Object {
          "kind": "success",
          "subtitle": "subtitle test 1",
          "timeStamp": "1234",
          "title": "test 1",
        },
        Object {
          "kind": "success",
          "subtitle": "subtitle test 2",
          "timeStamp": "5678",
          "title": "test 2",
        },
      ]
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <ToastNotification
          caption="Time stamp: 1234"
          hideCloseButton={false}
          iconDescription="closes notification"
          kind="success"
          notificationType="toast"
          onCloseButtonClick={[Function]}
          role="alert"
          subtitle="subtitle test 1"
          title="test 1"
        />,
        <ToastNotification
          caption="Time stamp: 5678"
          hideCloseButton={false}
          iconDescription="closes notification"
          kind="success"
          notificationType="toast"
          onCloseButtonClick={[Function]}
          role="alert"
          subtitle="subtitle test 2"
          title="test 2"
        />,
      ],
      "className": "NotificationPanel",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": "0",
        "nodeType": "class",
        "props": Object {
          "caption": "Time stamp: 1234",
          "hideCloseButton": false,
          "iconDescription": "closes notification",
          "kind": "success",
          "notificationType": "toast",
          "onCloseButtonClick": [Function],
          "role": "alert",
          "subtitle": "subtitle test 1",
          "title": "test 1",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": "1",
        "nodeType": "class",
        "props": Object {
          "caption": "Time stamp: 5678",
          "hideCloseButton": false,
          "iconDescription": "closes notification",
          "kind": "success",
          "notificationType": "toast",
          "onCloseButtonClick": [Function],
          "role": "alert",
          "subtitle": "subtitle test 2",
          "title": "test 2",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <ToastNotification
            caption="Time stamp: 1234"
            hideCloseButton={false}
            iconDescription="closes notification"
            kind="success"
            notificationType="toast"
            onCloseButtonClick={[Function]}
            role="alert"
            subtitle="subtitle test 1"
            title="test 1"
          />,
          <ToastNotification
            caption="Time stamp: 5678"
            hideCloseButton={false}
            iconDescription="closes notification"
            kind="success"
            notificationType="toast"
            onCloseButtonClick={[Function]}
            role="alert"
            subtitle="subtitle test 2"
            title="test 2"
          />,
        ],
        "className": "NotificationPanel",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": "0",
          "nodeType": "class",
          "props": Object {
            "caption": "Time stamp: 1234",
            "hideCloseButton": false,
            "iconDescription": "closes notification",
            "kind": "success",
            "notificationType": "toast",
            "onCloseButtonClick": [Function],
            "role": "alert",
            "subtitle": "subtitle test 1",
            "title": "test 1",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": "1",
          "nodeType": "class",
          "props": Object {
            "caption": "Time stamp: 5678",
            "hideCloseButton": false,
            "iconDescription": "closes notification",
            "kind": "success",
            "notificationType": "toast",
            "onCloseButtonClick": [Function],
            "role": "alert",
            "subtitle": "subtitle test 2",
            "title": "test 2",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`NotificationPanel.jsx when notifications is an empty array renders without crashing 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <NotificationPanel
    notifications={Array []}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": undefined,
      "className": "NotificationPanel",
    },
    "ref": null,
    "rendered": null,
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": undefined,
        "className": "NotificationPanel",
      },
      "ref": null,
      "rendered": null,
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
